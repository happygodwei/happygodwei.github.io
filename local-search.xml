<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>travels</title>
    <link href="/2025/05/07/travels/"/>
    <url>/2025/05/07/travels/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1f5b5272aee64aa3b2ee6a83ac852ec186b7fb92f7306df137ced79eb857c720">73d603d6a6fef8e1f47d8accad36c4ada739a4534790f6387cb92579461419e43b343988bdb2d55b4c323feb4e68464f9fc893777910a6040dc9efef4045ddb8387bd9b430c5b10b4944dc7d6b0ead4221757d6314ffacaae4cb42f71323d7123520506a8a1115527afeaa96a325904e0fd35d7aaa0c11b52f667e40f397a8799b05d82986f7fd88de41c7a33841ae12c3185354572cf737333e76db658d848d6cab3f8751799eca15eef99a031dfde8f57b26e7e6d0bb034b44481ace4f3487f23d770955471f36f8427bf4d5bb72fc95008e5944a544d52f4d1e932a3a9f8507d04a34dc1032c1ee2afede34af6e815025a1cf54aacf7d89ec9f0abc24605b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="Hey, password is required here.">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>diary</title>
    <link href="/2025/02/26/diary/"/>
    <url>/2025/02/26/diary/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="25f77d34d8a7fa1a4f8b36b16d06594312dcc14c37431ccb280162661e5e7ec1">56d5ebbf617c8603b31ae6e7e01de83c92cbbbf057eff7b7fa6543991ebcce33</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="Hey, password is required here.">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>25年上学期竞赛时间</title>
    <link href="/2025/02/17/contest/"/>
    <url>/2025/02/17/contest/</url>
    
    <content type="html"><![CDATA[<p>蓝桥杯 2025.4.12 9:00 - 11:00 天梯赛 2025.4.19 13:30 - 16:30icpc邀请赛 河北省省赛</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>note</title>
    <link href="/2025/02/08/note/"/>
    <url>/2025/02/08/note/</url>
    
    <content type="html"><![CDATA[<p>O-D pairs</p><p>SCS （successor nodes）</p><p>PDS （predecessor nodes）</p><p>PDF 联合概率密度函数</p><p>CDF 累积分布函数</p><p>RSPP 可靠最短路径问题 reliable shortest path problem</p><p>The paper is based α-reliable path</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>word</title>
    <link href="/2025/02/08/word/"/>
    <url>/2025/02/08/word/</url>
    
    <content type="html"><![CDATA[<p>normal distributions 正太分布（高斯分布）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>memory</title>
    <link href="/2025/01/28/memory/"/>
    <url>/2025/01/28/memory/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1160c024cb98b4a3ed553561280fdfa5cadaac0e72d4fba7db8a106f4557dfd4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="Hey, password is required here.">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HongKong2024</title>
    <link href="/2024/12/23/HongKong2024/"/>
    <url>/2024/12/23/HongKong2024/</url>
    
    <content type="html"><![CDATA[<h1 id="icpc香港站游记">2024ICPC香港站游记</h1><h2id="icpc香港站结束了香港站应该是最后一场xcpc区域赛了以意想不到的银牌退役了写一篇游记纪念一下香港之旅">icpc香港站结束了，香港站应该是最后一场xcpc区域赛了，以意想不到的银牌退役了,写一篇游记纪念一下香港之旅。</h2><h3 id="day0-12.20">Day0 （12.20）</h3><p>这次香港站学校去了两队，我订了从北京大兴到香港的机票，这是我人生中第一次坐飞机。下午1点的飞机，订了一张8点出发9点到大兴机场的高铁。订的太早了换完港币在机场就没事干了。换港币的时候，本来想一人换200港币，结果只有500面额的港币，最后一人换了一张500的。晚上到了香港已经很晚了。直接买了张八达通，之后坐机场快线直奔酒店了，到了后发现400一晚的酒店破败不堪，非常小，只有两张小床，为后面去深圳做了铺垫。中午在大兴吃了米村拌饭，晚上在香港的冰室吃了海鲜炒面，感觉还挺好吃的。酒店门口有卖鸡蛋仔，20HKD两个，不仅好吃而且性价比高。### Day1 （12.21）热身赛。早上去汇丰银行办港卡，前一天晚上在汇丰香港app线上申请成功了，去线下存了100港币到卡里。（队友好像因为名字两个字办卡要审核）办完就去吃了M。领物资环节，主办方送了可爱小熊，去华为拿了个小熊猫和手提袋，JaneStreet领了衣服。热身赛题A比较有意思15个选择，开始以为答案是藏头STARTPARTYTODAY，结果wa了。B是去年杭州站原题，去年我们没做出来，这次我成功A了这个题，我比去年有进步。C是VP过的原题。D也是杭州题，很难不会做。热身赛结束后就到了最隆重的晚宴环节，没想到香港理工准备的晚宴这么顶级。我们桌坐了9个人。一共九个菜。非常好吃，奢华。晚宴的时候JaneStreet又送了扑克牌。（第二天发现好像还送了袋子，有些队伍说在晚宴拿到了，但我们没拿到）吃完晚宴，我们学校两队兵分两路，部分队友去打舞萌了。我去了摩天轮，感觉太值了，18块钱在摩天轮上坐了三圈。晚上回去想吃哈根达斯，找了一家店，因为太晚了都关门了，遗憾休息睡觉。</p><h3 id="day2-12.22">Day2 （12.22）</h3><p>早上吃的麦当劳早餐，60港币，吃完后就开始了激动人心对正式赛。 正式赛（改编自lyt）    这次比赛出乎我的意料，最后拿了银奖，总体真的是十分顺利，愿望实现了！    C题：比赛一开始我先去看题，队友调vscode设置和敲模板，看到有人过题才去读C题。题目慌慌张张没读懂，最后还是lh解释一遍，代码也好实现，写完交上直接过了。    K题：跟着榜做K题，读完有个大概思路，最后2发罚时给过了。赛中开始发了麦当劳，一人一个双吉，之后和志愿者又要了一个汉堡。最后快结束的时候给我们发了一个健身餐（。    F题：以为很简单，最后发现不是很简单，没做出来。    G题&amp;H题：也没做出来，赛时讨论了半天，发现题解跟我们讨论的不太相同。    L题：最后还是去做过题人数第三多的L题，拼尽全力战胜L题，怒写240+行代码（屎山），最后无伤AC。靠罚时优势三题银牌。</p><p>闭幕式在CityU举办，正好查到了附近有一家哈根达斯，最后也是吃上了爱情船。除了草莓碎酸死，还是很好吃的。（希望我早日找到女朋友，下次带女友一起去吃。）</p><p>由于香港酒店（就是民宿）太过破旧，准备连夜去深圳住一晚高端酒店。对比之下深圳的酒店就是仙境。晚上来了一顿丰盛的夜宵。爽！！！</p><h2 id="最后">最后</h2><p>    感谢我的两个队友，他们都付出了很多。感谢主办方带来很棒的参赛体验，还有顶级的港理晚宴（据说一桌2500hkd）。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ICPC</tag>
      
      <tag>HongKong</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>diary_20241211</title>
    <link href="/2024/12/11/diary-20241211/"/>
    <url>/2024/12/11/diary-20241211/</url>
    
    <content type="html"><![CDATA[<p>today is a good day! 晚上忘了写了。第二天补写一个吧。</p><h1 id="train">train</h1><p>今天下午3点开始写题， 写了8道题（学了数学和并查集），目标一天10题，看看以后能不能早上早点起床。</p>]]></content>
    
    
    
    <tags>
      
      <tag>diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>diary_20241209</title>
    <link href="/2024/12/09/diary-20241209/"/>
    <url>/2024/12/09/diary-20241209/</url>
    
    <content type="html"><![CDATA[<h1 id="today-i-did">Today I Did</h1><p>今天见了她， # Today I Learned 今天才把最后算法进阶指南的0x00基本算法全部刷完，时间过得太快了，20号就要飞香港了，看看最后两周能不能刷4章，计划这周刷完数学和数据结构。</p>]]></content>
    
    
    
    <tags>
      
      <tag>diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>假退役</title>
    <link href="/2024/11/10/train/"/>
    <url>/2024/11/10/train/</url>
    
    <content type="html"><![CDATA[<p>本来以为打完ccpc哈尔滨站就退役了，但是现在申请到了icpc香港站的名额。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>退役</title>
    <link href="/2024/09/21/%E9%80%80%E5%BD%B9/"/>
    <url>/2024/09/21/%E9%80%80%E5%BD%B9/</url>
    
    <content type="html"><![CDATA[<p>今天打完了应该是人生中最后一场icpc比赛，失败的竞赛经历。截止今日我的codeforces分数刚到1700分。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>exercise</title>
    <link href="/2024/08/17/exercise/"/>
    <url>/2024/08/17/exercise/</url>
    
    <content type="html"><![CDATA[<h1 id="博弈论">博弈论</h1><p><ahref="https://codeforces.com/contest/2004/problem/E">CF2004E</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Radix</title>
    <link href="/2024/07/31/Radix/"/>
    <url>/2024/07/31/Radix/</url>
    
    <content type="html"><![CDATA[<h1 id="题目链接">题目链接</h1><p><ahref="https://pintia.cn/problem-sets/994805342720868352/exam/problems/type/7?problemSetProblemId=994805507225665536&amp;page=0">Radix</a></p><h1 id="题目思路">题目思路</h1><p>不妨设 <span class="math inline"><em>N</em><sub>1</sub></span>是确定进制的数，讲该数转换成十进制数。我们要求 <spanclass="math inline"><em>N</em><sub>2</sub></span>的进制。由于位数低的时候进制数可能会很大我们分情况讨论，设进制数为x。</p><h2 id="n_2.size1-的时候"><spanclass="math inline"><em>N</em><sub>2</sub>.<em>s</em><em>i</em><em>z</em><em>e</em> =  = 1</span>的时候</h2><p>直接判断 <span class="math inline"><em>N</em><sub>2</sub></span>是不是等于 <span class="math inline"><em>N</em><sub>1</sub></span></p><h2 id="n_2.size-2-的时候"><spanclass="math inline"><em>N</em><sub>2</sub>.<em>s</em><em>i</em><em>z</em><em>e</em> =  = 2</span>的时候</h2><p>设<spanclass="math inline"><em>N</em><sub>2</sub> = <em>a</em><sub>0</sub><em>a</em><sub>1</sub></span>,我们有方程 <spanclass="math inline"><em>a</em><sub>0</sub><em>x</em> + <em>a</em><sub>1</sub> = <em>N</em><sub>1</sub></span>，如果x有整数解且整数解满足<spanclass="math inline"><em>N</em><sub>2</sub></span>的进制要求，则输出x，否则无解。</p><h2 id="n_2.size-3-的时候"><spanclass="math inline"><em>N</em><sub>2</sub>.<em>s</em><em>i</em><em>z</em><em>e</em> =  = 3</span>的时候</h2><p>设 <spanclass="math inline"><em>N</em><sub>2</sub> = <em>a</em><sub>0</sub><em>a</em><sub>1</sub><em>a</em><sub>2</sub></span>,我们有方程 <spanclass="math inline"><em>a</em><sub>0</sub><em>x</em><sup>2</sup> + <em>a</em><sub>1</sub><em>x</em> + <em>a</em><sub>2</sub> = <em>N</em><sub>1</sub></span>解方程即可</p><h2 id="n_2.size-3-的时候-1"><spanclass="math inline"><em>N</em><sub>2</sub>.<em>s</em><em>i</em><em>z</em><em>e</em> &gt; 3</span>的时候</h2><p>直接遍历进制即可</p><h1 id="代码">代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> a0,a1,tag,radix,cnt1=<span class="hljs-number">0</span>,d=<span class="hljs-number">0</span>;<br>    string n1,n2;<br>    <span class="hljs-type">bool</span> flag=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;n1&gt;&gt;n2&gt;&gt;tag&gt;&gt;radix;<br>    <span class="hljs-keyword">if</span>(tag==<span class="hljs-number">2</span>)<span class="hljs-built_in">swap</span>(n1,n2);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n1.<span class="hljs-built_in">length</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--)&#123;<br>        <span class="hljs-keyword">if</span>(n1[i]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;n1[i]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)cnt1+=(n1[i]-<span class="hljs-string">&#x27;0&#x27;</span>)*<span class="hljs-built_in">pow</span>(radix,n1.<span class="hljs-built_in">length</span>()-i<span class="hljs-number">-1</span>);<br>        <span class="hljs-keyword">if</span>(n1[i]&gt;=<span class="hljs-string">&#x27;a&#x27;</span>&amp;&amp;n1[i]&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)cnt1+=(n1[i]-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">10</span>)*<span class="hljs-built_in">pow</span>(radix,n1.<span class="hljs-built_in">length</span>()-i<span class="hljs-number">-1</span>);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:n2)&#123;<br>        <span class="hljs-keyword">if</span>(i&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;i&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)&#123;<span class="hljs-keyword">if</span>(i-<span class="hljs-string">&#x27;0&#x27;</span>+<span class="hljs-number">1</span>&gt;d)d=i-<span class="hljs-string">&#x27;0&#x27;</span>+<span class="hljs-number">1</span>;&#125;<br>        <span class="hljs-keyword">if</span>(i&gt;=<span class="hljs-string">&#x27;a&#x27;</span>&amp;&amp;i&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)&#123;<span class="hljs-keyword">if</span>(i-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">11</span>&gt;d)d=i-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">11</span>;&#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(n2.<span class="hljs-built_in">length</span>()==<span class="hljs-number">2</span>)&#123;<br>        <span class="hljs-keyword">if</span>(n2[<span class="hljs-number">0</span>]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;n2[<span class="hljs-number">0</span>]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)a0=n2[<span class="hljs-number">0</span>]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>        <span class="hljs-keyword">else</span> a0=n2[<span class="hljs-number">0</span>]-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">if</span>(n2[<span class="hljs-number">1</span>]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;n2[<span class="hljs-number">1</span>]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)a1=n2[<span class="hljs-number">1</span>]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>        <span class="hljs-keyword">else</span> a1=n2[<span class="hljs-number">1</span>]-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">if</span>((cnt1-a1)%a0==<span class="hljs-number">0</span>&amp;&amp;(cnt1-a1)/a0&gt;=d)cout&lt;&lt;(cnt1-a1)/a0;<br>        <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;Impossible&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=d;<span class="hljs-number">1</span>;i++)&#123;<br>        <span class="hljs-type">int</span> cnt2=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=n2.<span class="hljs-built_in">length</span>()<span class="hljs-number">-1</span>;j&gt;=<span class="hljs-number">0</span>;j--)&#123;<br>            <span class="hljs-keyword">if</span>(n2[j]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;n2[j]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)cnt2+=(n2[j]-<span class="hljs-string">&#x27;0&#x27;</span>)*<span class="hljs-built_in">pow</span>(i,n2.<span class="hljs-built_in">length</span>()-j<span class="hljs-number">-1</span>);<br>            <span class="hljs-keyword">if</span>(n2[j]&gt;=<span class="hljs-string">&#x27;a&#x27;</span>&amp;&amp;n2[j]&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)cnt2+=(n2[j]-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-number">10</span>)*<span class="hljs-built_in">pow</span>(i,n2.<span class="hljs-built_in">length</span>()-j<span class="hljs-number">-1</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(n2.<span class="hljs-built_in">length</span>()==<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-keyword">if</span>(cnt2!=cnt1)&#123;<br>                cout&lt;&lt;<span class="hljs-string">&quot;Impossible&quot;</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(cnt1==cnt2)&#123;<br>            cout&lt;&lt;i;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(cnt2&gt;cnt1)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;Impossible&quot;</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>20240531每日一题</title>
    <link href="/2024/05/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    <url>/2024/05/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>2024年5月31日 CF1965B 1800</p><h1 id="题目链接">题目链接</h1><p><ahref="https://codeforces.com/problemset/problem/1965/B">CF1965B</a></p><h1 id="题目翻译">题目翻译</h1><p>给你两个整数 n 和 k 。求一个长度至多为 25 的非负整数序列 <spanclass="math inline"><em>a</em></span> ，使得下列条件成立。</p><ul><li>没有和为 <span class="math inline"><em>k</em></span> 的 <spanclass="math inline"><em>a</em></span> 的子序列。</li><li>对于 <span class="math inline"><em>v</em> ≠ <em>k</em></span>所在的所有 <span class="math inline">1 ≤ <em>v</em> ≤ <em>n</em></span>，存在一个和为 <span class="math inline"><em>v</em></span> 的 <spanclass="math inline"><em>a</em></span> 的子序列。</li></ul><p>如果 <span class="math inline"><em>b</em></span> 可以从 <spanclass="math inline"><em>a</em></span>中删除几个（可能是零个或全部）元素，而不改变其余元素的顺序，那么序列<span class="math inline"><em>b</em></span> 就是 <spanclass="math inline"><em>a</em></span> 的子序列。例如， <spanclass="math inline">[5, 2, 3]</span> 是 <spanclass="math inline">[1, 5, 7, 8, 2, 4, 3]</span> 的子序列。</p><p>可以证明，在给定的约束条件下，解总是存在的。</p><h1 id="题目思路">题目思路</h1><p>由于题目要求答案最多25个数，不考虑k，由于 <spanclass="math inline">2<sup>20</sup> = 1048576</span>，只需要20个数就能填满1-1e6。即 <spanclass="math inline">[1, 2, 4, ...2<sup>19</sup>]</span>接下来想办法去掉k。记k二进制数的最高位记为x，例如2的二进制数为10，x=2。我们先加入 <spanclass="math inline">[1, 2, 4, ...2<sup><em>x</em> − 2</sup>]</span>,我们能获得1到 <spanclass="math inline">2<sup><em>x</em> − 2</sup></span>的数。（x=1时不加入任何数） 再加入 k-( <spanclass="math inline">2<sup><em>x</em> − 2</sup></span>-1)-1，得到1到k-1的数。 加入 <spanclass="math inline">[2<sup><em>x</em></sup>, 2<sup><em>x</em> + 2</sup>, ...2<sup>19</sup>]</span>后，我们只剩下k+1 到 <spanclass="math inline">2<sup><em>x</em></sup> − 1</span>没有添加进去。 加入k+1 得到 k+1 到 2k的数. 加入 2k+1 我们得到 除了3k+1以外的 1到4k+1的数。我们能证明<spanclass="math inline">3<em>k</em> &gt; 2<sup><em>x</em></sup> − 1</span>我们就得到了所有的数。我们用23个数得到了所有的数。</p><h1 id="代码">代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,k,cnt;<br>vector&lt;<span class="hljs-type">int</span>&gt;res;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    res.<span class="hljs-built_in">clear</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">20</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>((<span class="hljs-number">1</span>&lt;&lt;(i+<span class="hljs-number">1</span>))<span class="hljs-number">-1</span>&gt;=k)&#123;<br>            cnt=i;<br>            res.<span class="hljs-built_in">push_back</span>(k-((<span class="hljs-number">1</span>&lt;&lt;cnt)<span class="hljs-number">-1</span>)<span class="hljs-number">-1</span>);<br>            res.<span class="hljs-built_in">push_back</span>(k+<span class="hljs-number">1</span>);<br>            res.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">2</span>*k+<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            res.<span class="hljs-built_in">push_back</span>((<span class="hljs-number">1</span>&lt;&lt;i));<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=cnt+<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">20</span>;i++)&#123;<br>        res.<span class="hljs-built_in">push_back</span>((<span class="hljs-number">1</span>&lt;&lt;i));<br>    &#125;<br>    cout&lt;&lt;res.<span class="hljs-built_in">size</span>()&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i:res)&#123;<br>        cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>;<br>    &#125;<br>    cout&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> t=<span class="hljs-number">1</span>;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CodeForces</category>
      
    </categories>
    
    
    <tags>
      
      <tag>每日一题</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
